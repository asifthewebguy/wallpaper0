name: Generate API Files

on:
  push:
    branches: [ master ]
    paths:
      - 'wp/**'  # Trigger when files in the wp directory change
      - 'google-drive-mapping.json'  # Trigger when Google Drive mapping changes
      - 'config.js'  # Trigger when configuration changes
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Needed to push changes back to the repository

jobs:
  generate-api:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for proper commits

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check mapping file
      run: npm run check-mapping-file

    - name: Generate API files
      run: npm run generate-data

    - name: Update GitHub Pages files
      run: |
        # Copy index file
        cp github-pages-index.html index.html

        # No need to copy config.js as it's already in the root directory

        # Create js directory
        mkdir -p js

        # No need to copy js files as they're already in the js directory

        # Copy the improved proxy.js file if it exists, otherwise create a default one
        if [ -f "js/improved-proxy.js" ]; then
          cp js/improved-proxy.js js/proxy.js
          echo "Using improved proxy implementation"
        else
          # Create an improved proxy.js file with better CORS handling
          echo '/**
 * Improved Google Drive Image Proxy for GitHub Pages
 */
window.GoogleDriveProxy = {
  extractFileId: function(url) {
    if (url.includes("export=view&id=")) {
      const idParam = url.split("id=")[1];
      return idParam ? idParam.split("&")[0] : null;
    }
    const fileMatch = url.match(/\/file\/d\/([^/]+)/);
    if (fileMatch && fileMatch[1]) return fileMatch[1];
    const idMatch = url.match(/[?&]id=([^&]+)/);
    if (idMatch && idMatch[1]) return idMatch[1];
    return null;
  },
  loadImage: function(driveUrl) {
    return new Promise((resolve, reject) => {
      const fileId = this.extractFileId(driveUrl);
      if (!fileId) {
        reject(new Error("Invalid Google Drive URL"));
        return;
      }

      // Try multiple methods to load the image
      this.tryLoadingMethods(fileId)
        .then(url => resolve(url))
        .catch(error => reject(error));
    });
  },
  tryLoadingMethods: function(fileId) {
    return new Promise((resolve, reject) => {
      // Method 1: Use the thumbnail API (most reliable for CORS)
      const thumbnailUrl = "https://drive.google.com/thumbnail?id=" + fileId + "&sz=w2000";

      // Method 2: Use the uc export API
      const exportUrl = "https://drive.google.com/uc?export=view&id=" + fileId;

      console.log("Trying Google Drive thumbnail API:", thumbnailUrl);

      // Even if tests might fail, the thumbnail API is still our best bet
      // Some browsers will block the test but allow the actual usage
      resolve(thumbnailUrl);
    });
  }
};' > js/proxy.js
          echo "Created default proxy implementation with improved CORS handling"
        fi

        # List files to verify
        ls -la js/

    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        git add api/ data/ index.html css/ js/ config.js google-drive-mapping.json

        # Determine commit message based on what triggered the workflow
        COMMIT_MSG="Auto-generate API files"
        if git diff --name-only HEAD | grep -q "google-drive-mapping.json"; then
          COMMIT_MSG="$COMMIT_MSG (Google Drive mapping updated)"
        elif git diff --name-only HEAD | grep -q "wp/"; then
          COMMIT_MSG="$COMMIT_MSG (new images added)"
        elif git diff --name-only HEAD | grep -q "config.js"; then
          COMMIT_MSG="$COMMIT_MSG (configuration updated)"
        fi

        git diff --quiet && git diff --staged --quiet || git commit -m "$COMMIT_MSG"
        git push
